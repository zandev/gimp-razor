<project name="gimp-razor" default="help">

	<!-- ========================================================================================= -->
	<!-- 									Initialization                                			   -->
	<!-- ========================================================================================= -->

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="/usr/share/java/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<tstamp>
		<format property="current.time" pattern="yyyy-MM-dd-HH-mm-ss" />
	</tstamp>

	<!-- ========================================================================================= -->
	<!-- 									Properties                                			   -->
	<!-- ========================================================================================= -->

	<property name="config.dir" location="${basedir}/config" />
	<property name="default.recipes.dir" location="${basedir}/recipes" />
	<property name="recipe.name" value="master" />
	<property name="recipe.file" location="${default.recipes.dir}/${recipe.name}" />

	<!-- User configurable properties -->
	<property environment="env" />
	<property file="${recipe.file}" prefix="cfg" />

	<!-- Default configurable properties-->
	<property file="${config.dir}/build.properties" prefix="cfg" />


	<!-- ========================================================================================= -->
	<!-- 									Macrodefs	                                		   -->
	<!-- ========================================================================================= -->

	<macrodef name="shellexec">
		<attribute name="dir" default="" />
		<attribute name="failonerror" default="true" />
		<text name="cmd" />
		<sequential>
			<echo>Executing ${cfg.shell} command:</echo>
			<echo>@{cmd}</echo>
			<shellscript shell="${cfg.shell}" dir="@{dir}" failonerror="@{failonerror}">
				@{cmd}
			</shellscript>
		</sequential>
	</macrodef>

	<macrodef name="git">
		<attribute name="command" />
		<attribute name="dir" default="" />
		<element name="args" optional="true" />
		<sequential>
			<echo message="git @{command}" />
			<exec executable="git" dir="@{dir}" failonerror="no">
				<arg value="@{command}" />
				<args />
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="git-clone">
		<attribute name="repository" />
		<attribute name="dest" />
		<sequential>
			<git command="clone">
				<args>
					<arg value="@{repository}" />
					<arg value="@{dest}" />
				</args>
			</git>
		</sequential>
	</macrodef>

	<macrodef name="git-update">
		<attribute name="dir" />
		<sequential>
			<echo>--------------------------------</echo>
			<echo>Updating @{dir}</echo>
			<echo>--------------------------------</echo>
			<git command="checkout" dir="@{dir}">
				<args>
					<arg value="master" />
				</args>
			</git>
			<git command="pull" dir="@{dir}">
				<args>
					<arg value="--rebase" />
				</args>
			</git>
		</sequential>
	</macrodef>

	<macrodef name="probe-git">
		<attribute name="name" />
		<attribute name="dir" />
		<attribute name="resultproperty" />
		<sequential>
			<exec executable="git" dir="@{dir}" failonerror="no" resultproperty="@{resultproperty}">
				<arg value="status" />
			</exec>
			<condition property="@{name}.src.dir.is.git">
				<equals arg1="${@{resultproperty}}" arg2="0" trim="true" />
			</condition>
			<condition property="@{name}.src.dir.exist">
				<available file="@{dir}" type="dir" />
			</condition>
			<condition property="@{name}.src.dir.delete">
				<and>
					<isset property="@{name}.src.dir.exist" />
					<not>
						<isset property="@{name}.src.dir.is.git" />
					</not>
				</and>
			</condition>
		</sequential>
	</macrodef>

	<macrodef name="uservalidation">
		<attribute name="propertyname" />
		<attribute name="message" />
		<attribute name="validargs" default="y,n" />
		<attribute name="abortarg" default="n" />
		<attribute name="inputprefix" default="user.validate." />
		<attribute name="abortprefix" default="user.abort." />
		<sequential>
			<input message="@{message}" validargs="@{validargs}" addproperty="@{inputprefix}@{propertyname}" />
			<condition property="@{abortprefix}@{propertyname}">
				<equals arg1="n" arg2="${@{inputprefix}@{propertyname}}" />
			</condition>
		</sequential>
	</macrodef>

	<macrodef name="prepare-src-dir">
		<attribute name="name" />
		<attribute name="dir" />
		<sequential>
			<uservalidation message="The directory '@{dir}' exist but is either not a git repository, or is corrupted. All content will be removed before checking out. Proceed?"
			                propertyname="delete.src.dir" />
			<fail if="user.abort.delete.src.dir">${ant.project.name} aborted by user. You may need to fix the directory '@{dir}' manually and run ${ant.project.name} again.</fail>
			<delete dir="@{dir}" />
		</sequential>
	</macrodef>



	<!-- ========================================================================================= -->
	<!-- 								Public targets	                                		   -->
	<!-- ========================================================================================= -->

	<!-- ================================= 
          target: all              
         ================================= -->
	<target name="all" depends="installdeps, mkdirs, fetch, update, build, clean, launch" description="description">

	</target>

	<!-- ================================= 
          target: clean              
         ================================= -->
	<target name="clean" depends="" description="Clean all temporary files">
		<delete dir="${cfg.tmp.dir}" />
	</target>

	<!-- ================================= 
	          target: clean-all          
	         ================================= -->
	<target name="clean-all" depends="" description="Clean all files and directories in use for the current recipe">
		<uservalidation message="${ant.project.name} is going to delete all sources, temporaries and build directories it use. Proceed?"
		                propertyname="clean.all" />
		<fail if="user.abort.clean.all" />
		<delete dir="${cfg.tmp.dir}" />
		<delete dir="${cfg.babl.src.dir}" />
		<delete dir="${cfg.gegl.src.dir}" />
		<delete dir="${cfg.gimp.src.dir}" />
		<delete dir="${cfg.gimp.install.dir}" />
	</target>


	<!-- ================================= 
          target: mkdirs              
         ================================= -->
	<target name="mkdirs" depends="" description="Create required directories">
		<mkdir dir="${cfg.opt.dir}" />
		<mkdir dir="${cfg.babl.src.dir}" />
		<mkdir dir="${cfg.gegl.src.dir}" />
		<mkdir dir="${cfg.gimp.src.dir}" />
		<mkdir dir="${cfg.gimp.install.dir}" />
		<mkdir dir="${cfg.tmp.dir}" />
	</target>

	<!-- ================================= 
          target: installdeps              
         ================================= -->
	<target name="installdeps"
	        description="Installing required dependencies, using the configured package management system">
		<shellexec>${cfg.pkg.cmd} ${cfg.pkg.dependencies}</shellexec>
	</target>

	<!-- ================================= 
          target: fetch              
         ================================= -->
	<target name="fetch"
	        depends="mkdirs, -clone-babl, -clone-gegl, -clone-gimp"
	        description="Retrieve sources from their remote git repositories">
	</target>

	<!-- ================================= 
          target: update              
         ================================= -->
	<target name="update"
	        depends="fetch,-update-babl,-update-gegl,-update-gimp"
	        description="Update sources to the latest changes">
	</target>

	<!-- ================================= 
          target: build              
         ================================= -->
	<target name="build"
	        depends="update, -build-babl, -build-gegl, -build-gimp"
	        description="Build babl, gegl and the gimp">
	</target>

	<!-- ================================= 
          target: launch              
         ================================= -->
	<target name="launch" depends="build" description="Launch your cutting edge gimp">
		<exec executable="${cfg.gimp.install.dir}/gimp-2.7">
		</exec>
	</target>

	<!-- ================================= 
          target: show-config              
         ================================= -->
	<target name="show-config" description="Show the current interpolated configuration">
		<echoproperties format="xml">
			<propertyset>
				<propertyref prefix="cfg" />
			</propertyset>
		</echoproperties>
	</target>

	<!-- ================================= 
          target: list-recipes              
         ================================= -->
	<target name="list-recipes" depends="-probe-recipes-dir" description="List the available recipes">
		<pathconvert pathsep="${line.separator}" property="show-recipes" refid="user.recipes.fileset" />
		<echo>${show-recipes}</echo>
	</target>


	<!-- ================================= 
          target: usage, help              
         ================================= -->
	<target name="usage" description="Show the usage">
		<echo message="  Execute '${ant.project.name} -p' for build file help." />
		<echo message="  Execute '${ant.project.name} -h' for Ant help." />
		<exec executable="ant">
			<arg value="-p" />
		</exec>
	</target>

	<target name="help" depends="usage" />



	<!-- ========================================================================================= -->
	<!-- 								Private targets	                                		   -->
	<!-- ========================================================================================= -->

	<!-- - - - - - - - - - - - - - - - - - 
          target: -probe-recipes-dir                      
         - - - - - - - - - - - - - - - - - -->
	<target name="-probe-recipes-dir">
		<if>
			<available file="${user.home}/.${ant.project.name}" type="dir" />
			<then>
				<property name="user.recipes.dir" location="${user.home}/.${ant.project.name}"/>
			</then>
			<elseif>
				<available file="${user.home}/config/${ant.project.name}" type="dir" property="user.recipes.dir" />
				<then>
					<property name="user.recipes.dir" location="${user.home}/config/${ant.project.name}"/>
				</then>
			</elseif>
		</if>
		
		<fileset id="default.recipes.fileset" dir="${default.recipes.dir}">
			<include name="*" />
		</fileset>
		<fileset id="user.recipes.fileset" dir="${user.recipes.dir}">
			<include name="*" />
		</fileset>
	</target>


	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- 										probe	                                		   -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="-probe-babl" depends="mkdirs">
		<probe-git name="babl" dir="${cfg.babl.src.dir}" resultproperty="babl.git.status" />
	</target>

	<target name="-probe-gegl" depends="mkdirs">
		<probe-git name="gegl" dir="${cfg.gegl.src.dir}" resultproperty="gegl.git.status" />
	</target>

	<target name="-probe-gimp" depends="mkdirs">
		<probe-git name="gimp" dir="${cfg.gimp.src.dir}" resultproperty="gimp.git.status" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- 										prepare	                                		   -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="-prepare-babl-src-dir" if="${babl.src.dir.delete}">
		<prepare-src-dir name="babl" dir="${cfg.babl.src.dir}" />
	</target>

	<target name="-prepare-gegl-src-dir" if="${gegl.src.dir.delete}">
		<prepare-src-dir name="gegl" dir="${cfg.gegl.src.dir}" />
	</target>

	<target name="-prepare-gimp-src-dir" if="${gimp.src.dir.delete}">
		<prepare-src-dir name="gimp" dir="${cfg.gimp.src.dir}" />
	</target>


	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- 										clone	                                		   -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="-clone-babl" depends="mkdirs, -probe-babl, -prepare-babl-src-dir" unless="${babl.src.dir.is.git}">
		<git-clone repository="git://git.gnome.org/babl" dest="${cfg.babl.src.dir}" />
	</target>

	<target name="-clone-gegl" depends="mkdirs, -probe-gegl, -prepare-gegl-src-dir" unless="${gegl.src.dir.is.git}">
		<git-clone repository="git://git.gnome.org/gegl" dest="${cfg.gegl.src.dir}" />
	</target>

	<target name="-clone-gimp" depends="mkdirs, -probe-gimp, -prepare-gimp-src-dir" unless="${gimp.src.dir.is.git}">
		<git-clone repository="git://git.gnome.org/gimp" dest="${cfg.gimp.src.dir}" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- 										update	                                		   -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="-update-babl">
		<git-update dir="${cfg.babl.src.dir}" />
	</target>

	<target name="-update-gegl">
		<git-update dir="${cfg.gegl.src.dir}" />
	</target>

	<target name="-update-gimp">
		<git-update dir="${cfg.gimp.src.dir}" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- 										build	                                		   -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="-build-babl" depends="-configure-babl, -compil-babl, -install-babl">
	</target>

	<target name="-build-gegl" depends="-configure-gegl, -compil-gegl, -install-gegl">
	</target>

	<target name="-build-gimp" depends="-configure-gimp, -compil-gimp, -install-gimp">
	</target>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- 										configure                                		   -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="-configure-babl">
		<shellexec dir="${cfg.babl.src.dir}">${cfg.babl.configure.cmd}</shellexec>
	</target>

	<target name="-configure-gegl">
		<shellexec dir="${cfg.gegl.src.dir}">${cfg.gegl.configure.cmd}</shellexec>
	</target>

	<target name="-configure-gimp">
		<shellexec dir="${cfg.gimp.src.dir}">${cfg.gimp.configure.cmd}</shellexec>
	</target>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- 										compil	                                		   -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="-compil-babl">
		<shellexec dir="${cfg.babl.src.dir}">${cfg.babl.build.cmd}</shellexec>
	</target>

	<target name="-compil-gegl">
		<shellexec dir="${cfg.gegl.src.dir}">${cfg.gegl.build.cmd}</shellexec>
	</target>

	<target name="-compil-gimp">
		<shellexec dir="${cfg.gimp.src.dir}">${cfg.gimp.build.cmd}</shellexec>
	</target>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- 										install	                                		   -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="-install-babl">
		<shellexec dir="${cfg.babl.src.dir}">${cfg.babl.install.cmd}</shellexec>
	</target>

	<target name="-install-gegl">
		<shellexec dir="${cfg.gegl.src.dir}">${cfg.gegl.install.cmd}</shellexec>
	</target>

	<target name="-install-gimp">
		<shellexec dir="${cfg.gimp.src.dir}">${cfg.gimp.install.cmd}</shellexec>
	</target>


</project>






















